Conversando com Python


Z:\>python
Python 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> print(eu não quero estudar)
  File "<stdin>", line 1
    print(eu não quero estudar)
          ^^^^^^
SyntaxError: invalid syntax. Perhaps you forgot a comma?
>>> print(7)
7
>>> print(2, 3, 4, 5)
2 3 4 5
>>> print(2, 3, 4, 5, sep="")
2345
>>> print(2,3,4,5,6,7,8,9,sep="                        ")
2                        3                        4                        5                        6                        7                        8                        9
>>> print(2,3,4,5, sep=" # ")
2 # 3 # 4 # 5
>>> print(2,3,4,5, sep="")
2345
>>> print("O professor tem bafo")
O professor tem bafo
>>> print("O professor tem", 52,"ano")
O professor tem 52 ano
>>> print('o professor tem', 58, 'anos)
  File "<stdin>", line 1
    print('o professor tem', 58, 'anos)
                                 ^
SyntaxError: unterminated string literal (detected at line 1)
>>> print('o professor tem 58 anos')
o professor tem 58 anos
>>> print('o professor disse: "programar é preciso, viver não"')
o professor disse: "programar é preciso, viver não"
>>> print('o professor disse:\n"programa é preciso, viver não"')
o professor disse:
"programa é preciso, viver não"
>>> print('o professor disse:\n\n"programa é preciso, viver não"')
o professor disse:

"programa é preciso, viver não"
>>> print('o professor disse:\n\n"programa é preciso,\n\n viver não"')
o professor disse:

"programa é preciso,

 viver não"
>>> print('o professor disse:\n\n"programa é preciso, \n\nviver não"')
o professor disse:

"programa é preciso,

viver não"
>>> print('o \\n)
  File "<stdin>", line 1
    print('o \\n)
          ^
SyntaxError: unterminated string literal (detected at line 1)
>>> print('o \\n')
o \n
>>> print('o professor disse:\n\n"programa é preciso, \\n\nviver não"')
o professor disse:

"programa é preciso, \n
viver não"
>>> print(7+3)
10
>>> print(2434656*342)
832652352
>>> print(2434656:342)
  File "<stdin>", line 1
    print(2434656:342)
                 ^
SyntaxError: invalid syntax
>>> print(2434656/342)
7118.877192982456
>>> print(7-3)
4
>>> print(7*3)
21
>>> print(7/3)
2.3333333333333335
>>> print(7**3)
343
>>> print(7**0.5)
2.6457513110645907
>>> print(121**0.5)
11.0
>>> print(164**0.5)
12.806248474865697
>>> print(178**0.5)
13.341664064126334
>>> print(190**0.5)
13.784048752090222
>>> print(199**0.5)
14.106735979665885
>>> print(197**0.5)
14.035668847618199
>>> print(196**0.5)
14.0
>>> print(13/5)
2.6
>>> print(13//5)
2
>>> print("13 dividido por 5 da", 13//5, "e sobra", 3)
13 dividido por 5 da 2 e sobra 3
>>> print(shule)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'shule' is not defined
>>> print(1)
1
>>> print("13 dividido por 5 da", 13//5, "e sobra", 13//5)
13 dividido por 5 da 2 e sobra 2
>>> print("13 dividido por 5 da", 13//5, "e sobra", 13%5)
13 dividido por 5 da 2 e sobra 3
>>> print(6=8/2)
  File "<stdin>", line 1
    print(6=8/2)
          ^^
SyntaxError: expression cannot contain assignment, perhaps you meant "=="?
>>> print(6+8/2)
10.0
>>> print((6+8/2)
...
...
... esc
  File "<stdin>", line 1
    print((6+8/2)
           ^^^^^
SyntaxError: invalid syntax. Perhaps you forgot a comma?
>>> print((6+8/2)
... l,p,l
  File "<stdin>", line 1
    print((6+8/2)
           ^^^^^
SyntaxError: invalid syntax. Perhaps you forgot a comma?
>>> print((6+8/2)
... cls
  File "<stdin>", line 1
    print((6+8/2)
           ^^^^^
SyntaxError: invalid syntax. Perhaps you forgot a comma?
>>> cls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cls' is not defined
>>> cls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cls' is not defined
>>> print((6+8)/2)
7.0
>>> print(1+3)
4
>>> print("1"+"2")
12
>>> print(1+2)
3
>>> print(1,sep="",2)
  File "<stdin>", line 1
    print(1,sep="",2)
                    ^
SyntaxError: positional argument follows keyword argument
>>> print("1",sep="","2")
  File "<stdin>", line 1
    print("1",sep="","2")
                        ^
SyntaxError: positional argument follows keyword argument
>>> print("1",sep="","2")
  File "<stdin>", line 1
    print("1",sep="","2")
                        ^
SyntaxError: positional argument follows keyword argument
>>> print("1"+"2",sep"")
  File "<stdin>", line 1
    print("1"+"2",sep"")
                     ^^
SyntaxError: invalid syntax
>>> print("1"+"2", "3"+"4",sep"")
  File "<stdin>", line 1
    print("1"+"2", "3"+"4",sep"")
                              ^^
SyntaxError: invalid syntax
>>> print("1"+"2","3"+"4",sep"")
  File "<stdin>", line 1
    print("1"+"2","3"+"4",sep"")
                             ^^
SyntaxError: invalid syntax
>>> print("1"+"2","3"+"4",sep" ")
  File "<stdin>", line 1
    print("1"+"2","3"+"4",sep" ")
                             ^^^
SyntaxError: invalid syntax
>>> print("1"+"2","3"+"4",sep=" ")
12 34
>>> print("1",sep="","2")
  File "<stdin>", line 1
    print("1",sep="","2")
                        ^
SyntaxError: positional argument follows keyword argument
>>> print("1"+"2", "3"+"4",sep"")
  File "<stdin>", line 1
    print("1"+"2", "3"+"4",sep"")
                              ^^
SyntaxError: invalid syntax
>>> print("1"+"2","3"+"4",sep="")
1234
>>> print("1","2",sep="")
12
>>> print("1"+"2","3"+"4",sep=" ")
12 34
>>> print("COT"+"UCA")
COTUCA
>>> print("1","2",sep="")
12
>>>